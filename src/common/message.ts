export const USER_MESSAGES = {
  USER_ALREADY_EXISTS: 'A user with this email already exists.',
  USER_CREATED_SUCCESS: 'User created successfully.',
  NO_USERS_FOUND: 'No users found.',
  USER_NOT_FOUND: (id: string) => `No user found with ID: ${id}`,
  EMAIL_ALREADY_IN_USE: 'A user with this email already exists.',
  USER_UPDATED_SUCCESS: 'User updated successfully.',
  USER_DELETED_SUCCESS: 'User deleted successfully.',
  INVALID_EMAIL: 'Invalid email',
  INVALID_PASSWORD: 'Invalid password',
  LOGIN_SUCCESS: 'Login successful',
  INVALID_EMAIL_FORMAT: 'Please provide a valid email address',
  PASSWORD_REQUIREMENTS: 'Password must be at least 8 characters long',
  NAME_REQUIRED: 'userName is required',
  EMAIL_REQUIRED: 'email is required',
  PASSWORD_REQUIRED: 'Password is required',
  USERNAME_EXAMPLE: 'John Doe',
  USERNAME_DESCRIPTION: 'name of the user',
  USEREMAIL_EXAMPLE: 'john@gmail.com',
  USEREMAIL_DESCRIPTION: 'Email address of the user',
  USERPASSWORD_EXAMPLE: 'Abcd@123',
  USERPASSWORD_DESCRIPTION: 'User password',
  USEREMAILREGEX_DESCRIPTION: /^[a-zA-Z0-9._%+-]+@gmail\.com$/,
  USERPASSWORDREGEX_DESCRIPTION: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/,
};
export const PRODUCT_MESSAGES = {
  PRODUCTNAME_EXAMPLE: 'iPhone 15',
  PRODUCTNAME_DESCRIPTION: 'Name of the product',
  PRODUCTCATEGORY_EXAMPLE: 'Electronics',
  PRODUCTCATEGORY_DESCRIPTION: 'Category of the product',
  PRODUCTBRANDNAME_EXAMPLE: 'Apple',
  PRODUCTBRANDNAME_DESCRIPTION: 'Brand name of the product',
  PRODUCTDESCRIPTION_EXAMPLE: 'Latest iPhone model with advanced features',
  PRODUCTDESCRIPTION_DESCRIPTION: 'Detailed description of the product',
  PRODUCTPAGE_EXAMPLE: 1,
  PRODUCTPAGE_DESCRIPTION: 'Page number (starting from 1)',
  PRODUCTLIMIT_EXAMPLE: 3,
  PRODUCTLIMIT_DESCRIPTION: 'Data per page: (starts from 3, with a maximum limit of 100)',
  PRODUCTSORTBY_EXAMPLE: 'productName',
  PRODUCTSORTBY_DESCRIPTION: 'Field to sort by (e.g., productName, category, brandName)',
  PRODUCTSORTORDER_EXAMPLE: 'asc',
  PRODUCTSORTORDER_DESCRIPTION: 'Sort order (e.g., asc or desc)',
  PRODUCT_NOTMATCHING: 'No matching data found',
  PRODUCT_NOT_FOUND: (id: string) => `No product found with ID: ${id}`
};

